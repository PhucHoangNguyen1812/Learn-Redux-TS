{"version":3,"sources":["components/Common/NotFound.tsx","components/Common/PrivateRoutes.tsx","components/Common/Sidebar.tsx","app/hooks.ts","features/auth/authSlice.ts","components/Common/Header.tsx","features/dashboard/components/StatisticItem.tsx","features/dashboard/dashboardSlice.ts","features/dashboard/components/LoverRankingList.tsx","features/dashboard/components/Widget.tsx","features/dashboard/index.tsx","features/lover/pages/AddEditPage.tsx","utils/history.ts","features/lover/components/LoverTable.tsx","utils/common.ts","features/city/citySlice.ts","features/lover/components/LoverFilters.tsx","features/lover/loverSlice.ts","features/lover/pages/ListPage.tsx","features/lover/index.tsx","components/Layout/Admin.tsx","features/auth/pages/LoginPage.tsx","App.tsx","features/auth/authSaga.ts","api/axiosClient.ts","api/cityApi.ts","api/loverApi.ts","features/dashboard/dashboardSaga.ts","features/lover/loverSaga.ts","features/city/citySaga.ts","app/rootSaga.ts","app/store.ts","serviceWorker.ts","index.tsx"],"names":["NotFound","props","PrivateRoutes","Boolean","localStorage","getItem","to","selected","createTheme","palette","action","useStyles","makeStyles","link","color","textDecoration","backgroundColor","Sidebar","classes","Box","sx","width","maxWidth","bgcolor","List","className","ListItem","button","ListItemIcon","ListItemText","primary","useAppDispatch","useDispatch","useAppSelector","useSelector","initialState","isLoggedIn","logging","currentUser","undefined","authSlice","createSlice","name","reducers","login","state","loginSuccess","payload","loginFailed","logout","authActions","actions","authReducer","reducer","Header","dispatch","flexGrow","AppBar","position","Toolbar","Typography","variant","component","textAlign","Button","onClick","theme","paddingRoot","spacing","lightRoot","light","root","display","flexFLow","justifyContent","alignItems","padding","border","StatisticItem","icon","label","value","Paper","align","dashboardSlice","loading","statistics","maleCount","femaleCount","highMarkCount","lowMarkCount","highestLoverList","lowestLoverList","rankingByCityList","fetchData","fetchDataSuccess","fetchDataFailed","setStatistics","setHighestLoverList","setLowestLoverList","setRankingByCityList","dashboardActions","selectDashboardLoading","dashboard","selectDashboardStatistics","selectHighestLoverList","selectLowestLoverList","selectRankingByCityList","dashboardReducer","table","LoverRankingList","loverList","TableContainer","Table","size","TableHead","TableRow","TableCell","TableBody","map","lover","idx","mark","id","borderRoot","Widget","title","children","mt","paddingLoad","paddingTop","top","Dashboard","console","log","useEffect","LinearProgress","Grid","container","item","xs","md","lg","Male","fontSize","Female","ArrowUpward","ArrowDownward","ranking","cityName","rankingList","cityId","AddEditPage","history","createBrowserHistory","edit","marginRight","LoverTable","cityMap","onEdit","onRemove","str","gender","fontWeight","city","citySlice","list","fetchCityList","fetchCityListSuccess","data","fetchCityListFailed","cityActions","selectCityList","selectCityMap","createSelector","cityList","reduce","code","cityReducer","LoverFilters","filter","onSearchChange","onChange","searchRef","useRef","FormControl","fullWidth","InputLabel","htmlFor","OutlinedInput","endAdornment","Search","defaultValue","name_like","e","newFilter","target","_page","inputRef","Select","labelId","MenuItem","_sort","_order","split","current","loverSlice","_limit","pagination","_totalRows","fetchLoverList","fetchLoverListSuccess","fetchLoverListFailed","setFilter","setFilterWithDebounce","loverActions","selectLoverList","selectLoverLoading","selectLoverFilter","selectLoverPagination","loverReducer","titleContainer","flexFlow","marginBottom","ListPage","mb","my","Pagination","count","Math","ceil","page","Lover","match","useRouteMatch","path","exact","spacingMain","spacingSb","gridTemplateRows","gridTemplateColumns","gridTemplateAreas","minHeight","header","gridArea","sidebar","borderRight","main","AdminLayout","space","box","LoginPage","isLogging","auth","elevation","username","password","CircularProgress","App","handleLogin","handleLogout","watchLoginFLow","authSaga","delay","setItem","put","push","message","removeItem","take","type","fork","call","axiosClient","axios","create","baseURL","headers","interceptors","request","use","config","error","Promise","reject","response","cityApi","getAll","get","params","LoverApi","getById","url","add","post","update","patch","remove","delete","fetchStatistics","fetchHighestLoverList","fetchLowestLoverList","fetchRankingByCityList","fetchDashboardData","dashboardSaga","all","loverApi","mark_gte","mark_lte","responseList","statisticList","x","callList","takeLatest","handleSearchDebounce","loverSaga","debounce","citySaga","rootSaga","rootReducer","combineReducers","router","connectRouter","sagaMiddleware","createSagaMiddleware","store","configureStore","middleware","getDefaulMiddleware","concat","routerMiddleware","run","window","location","hostname","ReactDOM","render","StrictMode","CssBaseline","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.1f0d160e.chunk.js","sourcesContent":["import * as  React from 'react';\r\n\r\nexport interface NotFoundProps{\r\n\r\n}\r\n\r\nexport function NotFound (props : NotFoundProps) {\r\n    return <div>NotFound</div>;\r\n}","import React from 'react';\r\n\r\nimport { Redirect, Route, RouteProps} from 'react-router-dom';\r\n\r\nexport interface PrivateRoutesProps{\r\n\r\n}\r\n\r\nexport function PrivateRoutes(props : RouteProps) {\r\n  \r\n    const isLoggedIn = Boolean(localStorage.getItem('access_token'));\r\n    if(!isLoggedIn) return <Redirect to = \"/login\"/>;\r\n        return <Route {...props} />\r\n\r\n}\r\n","import DashboardIcon from '@mui/icons-material/Dashboard';\r\nimport PeopleIcon from '@mui/icons-material/People';\r\nimport { createTheme } from '@mui/material';\r\nimport Box from '@mui/material/Box';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport { makeStyles } from '@mui/styles';\r\nimport * as React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst theme = createTheme();\r\nconst selected = theme.palette.action.selected;\r\n\r\nconst useStyles = makeStyles({\r\n\r\n  link: {\r\n    color:'inherit',\r\n    textDecoration : 'none',\r\n    '&.active > div': {\r\n      backgroundColor: selected ,\r\n    }\r\n  }\r\n});\r\n\r\nexport function Sidebar() {\r\n\r\n  const classes  = useStyles();\r\n  return (\r\n    <Box sx={{ width: '100%', maxWidth: 360, bgcolor: 'background.paper' }}>\r\n      <nav aria-label=\"main mailbox folders\">\r\n        <List>\r\n          <NavLink to=\"/admin/trang-chu\" className={classes.link}>\r\n            <ListItem button>\r\n                <ListItemIcon>\r\n                  <DashboardIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Trang Chủ\" />\r\n            </ListItem>\r\n          </NavLink>\r\n          <NavLink to=\"/admin/nguoi-yeu\" className={classes.link}>\r\n            <ListItem button>\r\n                <ListItemIcon>\r\n                  <PeopleIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Người Yêu Của Tôi\" />\r\n            </ListItem>\r\n          </NavLink>\r\n        </List>\r\n      </nav>\r\n    </Box>\r\n  );\r\n}\r\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from './store';\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { User } from \"../../models/user\";\r\n\r\nexport interface LoginPayLoad {\r\n    username: string;\r\n    password: string;\r\n}\r\n\r\nexport interface AuthState {\r\n    isLoggedIn: boolean;\r\n    logging?: boolean;\r\n    currentUser?: User;\r\n}\r\n\r\nconst initialState: AuthState = {\r\n    isLoggedIn : false,\r\n    logging: false,\r\n    currentUser: undefined\r\n}\r\n\r\nconst authSlice = createSlice ({\r\n    name:'auth',\r\n    initialState,\r\n    reducers: {\r\n        login(state, action:PayloadAction<LoginPayLoad>) {\r\n            state.logging = true;\r\n        },\r\n        loginSuccess(state, action:PayloadAction<User>) {\r\n            state.logging = false;\r\n            state.isLoggedIn = true;\r\n            state.currentUser = action.payload;\r\n        },\r\n        loginFailed(state, action:PayloadAction<String>) {\r\n            state.logging = false;\r\n        },\r\n\r\n        logout(state) {\r\n            state.isLoggedIn = false;\r\n            state.currentUser = undefined;\r\n        },\r\n    },\r\n})\r\n\r\nexport const authActions = authSlice.actions;\r\n\r\n\r\nexport const selectIsLoggedIn = (state: any) => state.auth.isLoggedIn;\r\nexport const selectLogging = (state: any) => state.auth.logging;\r\n\r\nconst authReducer  = authSlice.reducer;\r\nexport default authReducer;","import AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport * as React from 'react';\r\nimport { useAppDispatch } from '../../app/hooks';\r\nimport { authActions } from '../../features/auth/authSlice';\r\n\r\nexport function Header() {\r\n\r\n  const dispatch = useAppDispatch()\r\n  const handleLogoutClick = () => {\r\n      dispatch(authActions.logout())\r\n  }\r\n  return (\r\n    <Box sx={{ flexGrow: 1 }}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1, textAlign:'center' }}>\r\n            Quản Lý Người Yêu\r\n          </Typography>\r\n          <Button color=\"inherit\" onClick={handleLogoutClick}>Logout</Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </Box>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport {Box, Paper,Typography, createTheme } from '@mui/material';\r\nimport { makeStyles } from '@mui/styles';\r\n\r\n\r\nconst theme = createTheme();\r\nconst paddingRoot = theme.spacing(2);\r\nconst lightRoot = theme.palette.primary.light;\r\n\r\nconst useStyles = makeStyles ((theme) => ({\r\n    root: {\r\n       display: 'flex',\r\n       flexFLow: 'row nowrap',\r\n       justifyContent: 'space-between',\r\n       alignItems:'center',\r\n       \r\n       padding: paddingRoot,\r\n       border: `1px solid ${lightRoot}`\r\n    }\r\n}))\r\n\r\nexport interface StatisticItemProps {\r\n    icon: React.ReactElement;\r\n    label : string;\r\n    value : string | number;\r\n}\r\n\r\nexport default function StatisticItem ({icon, label, value} : StatisticItemProps) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Paper className = {classes.root}>\r\n            <Box>{icon}</Box>\r\n            <Box>\r\n                <Typography variant='h5' align ='right'>\r\n                    {value}\r\n                </Typography>\r\n                <Typography variant='caption'>{label}</Typography>\r\n            </Box>\r\n        </Paper>\r\n    )\r\n}","import { RootState } from './../../app/store';\r\nimport { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { Lover } from \"../../models\";\r\n\r\n\r\n\r\nexport interface DashboardStatistics {\r\n    maleCount: number;\r\n    femaleCount: number;\r\n    highMarkCount:  number;\r\n    lowMarkCount: number;\r\n}\r\n\r\nexport interface RankingByCity {\r\n    cityId : string;\r\n    cityName: string;\r\n    rankingList: Lover[];\r\n}\r\n\r\nexport interface DashboardState {\r\n    loading: boolean;\r\n    statistics: DashboardStatistics;\r\n    highestLoverList : Lover[];\r\n    lowestLoverList: Lover[];\r\n    rankingByCityList: RankingByCity[];\r\n}\r\n\r\nconst initialState: DashboardState = {\r\n    loading: false,\r\n    statistics: {\r\n        maleCount: 0,\r\n        femaleCount: 0,\r\n        highMarkCount: 0,\r\n        lowMarkCount: 0,\r\n    },\r\n    highestLoverList: [],\r\n    lowestLoverList: [],\r\n    rankingByCityList: [],\r\n}\r\n\r\nconst dashboardSlice = createSlice({\r\n    name:'dashboard',\r\n    initialState,\r\n    reducers:{\r\n        fetchData(state) {\r\n            state.loading = true;\r\n        },\r\n        fetchDataSuccess(state) {\r\n            state.loading = false;\r\n        },\r\n        fetchDataFailed(state) {\r\n            state.loading = false;\r\n        },\r\n        setStatistics(state, action: PayloadAction<DashboardStatistics>) {\r\n            state.statistics = action.payload;\r\n        },\r\n        setHighestLoverList(state, action: PayloadAction<Lover[]>) {\r\n            state.highestLoverList = action.payload;\r\n        },\r\n        setLowestLoverList(state, action: PayloadAction<Lover[]>) {\r\n            state.lowestLoverList = action.payload;\r\n        },\r\n        setRankingByCityList(state, action: PayloadAction<RankingByCity[]>) {\r\n            state.rankingByCityList = action.payload;\r\n        },\r\n\r\n    },\r\n});\r\n\r\nexport const dashboardActions = dashboardSlice.actions;\r\n\r\nexport const selectDashboardLoading = (state : RootState) => state.dashboard.loading;\r\nexport const selectDashboardStatistics = (state : RootState) => state.dashboard.statistics;\r\nexport const selectHighestLoverList = (state : RootState) => state.dashboard.highestLoverList;\r\nexport const selectLowestLoverList = (state : RootState) => state.dashboard.lowestLoverList;\r\nexport const selectRankingByCityList = (state : RootState) => state.dashboard.rankingByCityList;\r\n\r\n\r\nconst dashboardReducer = dashboardSlice.reducer;\r\nexport default dashboardReducer;\r\n","import { makeStyles } from \"@mui/styles\";\r\nimport {\r\n    Table, TableBody, TableCell, TableContainer, TableHead, TableRow}  \r\nfrom '@mui/material'\r\n\r\nimport React from 'react';\r\nimport { Lover } from \"../../../models\";\r\n\r\nconst useStyles = makeStyles ({\r\n    table: {},\r\n});\r\n\r\nexport interface LoverRankingListProps {\r\n    loverList: Lover[];\r\n}\r\n\r\nexport default function LoverRankingList({loverList}: LoverRankingListProps) {\r\n    const classes = useStyles();\r\n    return ( \r\n        <TableContainer>\r\n            <Table className={classes.table} size= \"small\" aria-label= \"simple table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell align=\"center\">#</TableCell>\r\n                        <TableCell align=\"center\">Tên Người</TableCell>\r\n                        <TableCell align=\"center\">Tỉ lệ Khuôn Mặt</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n\r\n                <TableBody>\r\n                    {loverList.map((lover,idx) => (\r\n                        <TableRow key = {lover.id}>\r\n                            <TableCell align=\"center\">{idx + 1}</TableCell>\r\n                            <TableCell align=\"center\">{lover.name}</TableCell>\r\n                            <TableCell align=\"center\">{lover.mark}</TableCell>\r\n                        </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    )\r\n}","import React from 'react';\r\nimport { Box,Paper, Typography,createTheme } from '@mui/material';\r\nimport { makeStyles } from '@mui/styles';\r\n\r\n\r\nconst theme = createTheme();\r\nconst paddingRoot = theme.spacing(2);\r\nconst borderRoot = theme.palette.primary.light;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: paddingRoot,\r\n    border: borderRoot,\r\n  },\r\n}));\r\n\r\nexport interface WidgetProps {\r\n  title: string;\r\n  children: any;\r\n}\r\n\r\nexport default function Widget({ title, children }: WidgetProps) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <Typography variant=\"button\">{title}</Typography>\r\n\r\n      <Box mt={2}>{children}</Box>\r\n    </Paper>\r\n  );\r\n}","import React, { useEffect } from 'react';\r\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\r\nimport { LinearProgress, Box, Grid, Typography } from '@mui/material'\r\nimport { makeStyles } from '@mui/styles'\r\nimport StatisticItem from './components/StatisticItem'\r\nimport {\r\n  dashboardActions,\r\n  selectDashboardLoading,\r\n  selectDashboardStatistics,\r\n  selectHighestLoverList,\r\n  selectLowestLoverList,\r\n  selectRankingByCityList,\r\n} from './dashboardSlice'\r\nimport { createTheme } from '@mui/system';\r\nimport {ArrowDownward, ArrowUpward, Female, Male} from '@mui/icons-material';\r\nimport LoverRankingList from './components/LoverRankingList';\r\nimport Widget from './components/Widget';\r\n\r\nconst theme = createTheme();\r\nconst paddingRoot = theme.spacing(1);\r\nconst paddingLoad = theme.spacing(-1);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n  root: {\r\n    position: 'relative',\r\n    paddingTop: paddingRoot,\r\n  },\r\n\r\n  loading: {\r\n    position: 'absolute',\r\n    top: paddingLoad,\r\n    width: '100%',\r\n  }\r\n\r\n}));\r\n\r\nexport default function Dashboard() {\r\n  const dispatch = useAppDispatch();\r\n  const loading = useAppSelector(selectDashboardLoading);\r\n  const statistics = useAppSelector(selectDashboardStatistics);\r\n  const highestLoverList = useAppSelector(selectHighestLoverList);\r\n  const lowestLoverList = useAppSelector(selectLowestLoverList);\r\n  const rankingByCityList = useAppSelector(selectRankingByCityList);\r\n\r\n\r\n\r\n  console.log({\r\n    loading,\r\n    statistics,\r\n    highestLoverList,\r\n    lowestLoverList,\r\n    rankingByCityList,\r\n  });\r\n\r\n  useEffect(() => {\r\n    dispatch(dashboardActions.fetchData());\r\n  }, [dispatch]);\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <Box className={classes.root}>\r\n\r\n      {loading && <LinearProgress className={classes.loading} />}\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} md={6} lg={3} >\r\n          <StatisticItem\r\n            icon={<Male fontSize=\"large\" color=\"primary\" />}\r\n            label=\"Đàn Ông\"\r\n            value={statistics.maleCount}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6} lg={3}>\r\n          <StatisticItem\r\n            icon={<Female fontSize=\"large\" color=\"primary\" />}\r\n            label=\"Phụ Nữ\"\r\n            value={statistics.femaleCount}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={6} lg={3}>\r\n          <StatisticItem\r\n            icon={<ArrowUpward fontSize=\"large\" color=\"primary\" />}\r\n            label=\"Tỉ Lệ Khuôn Mặt >= 8\"\r\n            value={statistics.highMarkCount}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={6} lg={3}>\r\n          <StatisticItem\r\n            icon={<ArrowDownward fontSize=\"large\" color=\"primary\" />}\r\n            label=\"Tỉ Lệ Khuôn Mặt <= 5\"\r\n            value={statistics.lowMarkCount}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Box mt={5}>\r\n      <Typography variant=\"h4\">Tất Cả</Typography>\r\n        <Box mt={2}>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12} md={6} lg={6} >\r\n              <Widget title= \"Xếp Hạng Người Tỉ Lệ Khuôn Mặt Cao Nhất\">\r\n                  <LoverRankingList loverList={highestLoverList}/>\r\n              </Widget>\r\n            </Grid>\r\n            <Grid item xs={12} md={6} lg={6}>\r\n              <Widget title=\"Xếp Hạng Người Tỉ Lệ Khuôn Mặt Thấp Nhất\">\r\n                <LoverRankingList loverList={lowestLoverList} />\r\n              </Widget>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      </Box>\r\n      <Box mt={5}>\r\n        <Typography variant=\"h4\">Xếp Hạng Trong Thành Phố</Typography>\r\n\r\n        <Box mt={2}>\r\n          <Grid container spacing={3}>\r\n            {rankingByCityList.map((ranking) => (\r\n              <Grid key={ranking.cityId} item xs={12} md={6} lg={3}>\r\n                <Widget title={ranking.cityName}>\r\n                  <LoverRankingList loverList={ranking.rankingList} />\r\n                </Widget>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\n\r\n\r\nexport default function AddEditPage() {\r\n  return <div>AddEditPage</div>;\r\n}","import {createBrowserHistory}  from 'history';\r\n\r\n\r\nexport const history = createBrowserHistory();","import { Box,Button, createTheme, Paper } from '@mui/material';\r\nimport { makeStyles } from '@mui/styles';\r\nimport { Table, TableCell, TableContainer, TableRow, TableHead, TableBody } from '@mui/material'\r\nimport React from 'react';\r\nimport { Lover, City } from '../../../models';\r\nimport {capitalizeString, getMarkColor} from '../../../utils';\r\n\r\nconst theme = createTheme();\r\n\r\nconst useStyles = makeStyles(() => ({\r\n\r\n    table: {},\r\n    edit: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nexport interface LoverTableProps {\r\n    loverList: Lover[];\r\n    cityMap: {\r\n        [key: string]: City;\r\n    };\r\n    onEdit?: (lover: Lover) => void;\r\n    onRemove?: (lover: Lover) => void;\r\n}\r\n\r\nexport default function LoverTable({ loverList, cityMap, onEdit, onRemove }: LoverTableProps) {\r\n    const classes = useStyles();\r\n    return (\r\n        <TableContainer component={Paper}>\r\n            <Table className={classes.table} size=\"small\" aria-label=\"simple table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>ID</TableCell>\r\n                        <TableCell>Tên</TableCell>\r\n                        <TableCell>Giới Tính</TableCell>\r\n                        <TableCell>Tỉ Lệ Khuôn Mặt</TableCell>\r\n                        <TableCell>Thành Phố</TableCell>\r\n                        <TableCell align=\"right\">Thao Tác</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n\r\n                <TableBody>\r\n                    {loverList.map((lover) => (\r\n                        <TableRow key={lover.id}>\r\n                            <TableCell width={310}>{lover.id}</TableCell>\r\n                            <TableCell>{lover.name}</TableCell>\r\n                            <TableCell>{capitalizeString(lover.gender)}</TableCell>\r\n                            <TableCell>\r\n                                <Box color={getMarkColor(lover.mark)} fontWeight=\"bold\">\r\n                                    {lover.mark}\r\n                                </Box>\r\n                            </TableCell>\r\n                            <TableCell>{cityMap[lover.city]?.name}</TableCell>\r\n                            <TableCell align=\"right\">\r\n                                <Button\r\n                                    size=\"small\"\r\n                                    className={classes.edit}        \r\n                                    color=\"primary\"\r\n                                    onClick={() => onEdit?.(lover)}\r\n                                >\r\n                                    Sửa\r\n                                </Button>\r\n\r\n                                <Button size=\"small\" color=\"secondary\" onClick={() => onRemove?.(lover)}>\r\n                                    Xoá\r\n                                </Button>\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    );\r\n}\r\n","export const capitalizeString = (str: string): string  => {\r\n    if(!str) return '';\r\n    if(str === 'male')\r\n        return 'Nam'\r\n    return 'Nữ'\r\n    //return `${str[0].toUpperCase()}${str.slice(1)}`;\r\n};\r\n\r\nexport const getMarkColor = (mark:number): string => {\r\n    if(mark >= 8) return 'yellow'\r\n    if(mark <= 4) return 'red'\r\n    return '';\r\n};","import {createSelector, createSlice,PayloadAction} from '@reduxjs/toolkit';\r\nimport cityApi from '../../api/cityApi';\r\nimport {RootState} from '../../app/store';\r\nimport {City, ListResponse} from '../../models'\r\n\r\nexport interface CityState {\r\n    loading: boolean,\r\n    list: City[];\r\n}\r\n\r\nconst initialState: CityState = {\r\n    loading: false,\r\n    list: [],\r\n};\r\n\r\nconst citySlice = createSlice({\r\n    name: 'city',\r\n    initialState,\r\n    reducers: {\r\n        fetchCityList(state) {\r\n            state.loading = true;\r\n        },\r\n        fetchCityListSuccess(state, action:PayloadAction<ListResponse<City>>) {\r\n            state.loading = false;\r\n            state.list = action.payload.data;    \r\n        },\r\n        fetchCityListFailed(state) {\r\n            state.loading = false;\r\n        },\r\n    },\r\n});\r\n\r\nexport const cityActions = citySlice.actions;\r\n\r\nexport const selectCityList = (state:RootState) => state.city.list;\r\nexport const selectCityMap = createSelector(selectCityList, (cityList) =>\r\n    cityList.reduce((map: {[key : string]: City}, city) => {\r\n        map[city.code] = city;\r\n        return map;\r\n    },{})\r\n);\r\n\r\nconst cityReducer = citySlice.reducer;\r\nexport default cityReducer;","import { Search } from \"@mui/icons-material\";\r\nimport {\r\n  Box,\r\n  FormControl,\r\n  Grid,\r\n  SelectChangeEvent,\r\n  Select,\r\n  InputLabel,\r\n  OutlinedInput,\r\n  MenuItem,\r\n  Button,\r\n} from \"@mui/material\";\r\nimport React, { ChangeEvent, useRef } from \"react\";\r\nimport { City, ListParams } from \"../../../models\";\r\n\r\nexport interface LoverFiltersProps {\r\n  filter: ListParams;\r\n  cityList: City[];\r\n\r\n  onChange?: (newFilter: ListParams) => void;\r\n  onSearchChange?: (newFilter: ListParams) => void;\r\n}\r\n\r\nexport default function LoverFilters({\r\n  filter,\r\n  onSearchChange,\r\n  onChange,\r\n  cityList,\r\n}: LoverFiltersProps) {\r\n  const searchRef = useRef<HTMLInputElement>();\r\n\r\n  const handleSearchChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    if (!onSearchChange) return;\r\n\r\n    const newFilter: ListParams = {\r\n      ...filter,\r\n      name_like: e.target.value,\r\n      _page: 1,\r\n    };\r\n\r\n    onSearchChange(newFilter);\r\n  };\r\n\r\n  const handleCityChange = (\r\n    e: SelectChangeEvent<{ value: unknown; name?: string }>\r\n  ) => {\r\n    if (!onChange) return;\r\n\r\n    const newFilter: ListParams = {\r\n      ...filter,\r\n      _page: 1,\r\n      city: e.target.value || undefined,\r\n    };\r\n    onChange(newFilter);\r\n  };\r\n\r\n  const handleSortChange = (\r\n    e: SelectChangeEvent<{ name?: string; value: unknown}>\r\n  ) => {\r\n    if (!onChange) return;\r\n\r\n    const value = e.target.value;\r\n    const [_sort, _order] = (value as string).split(\".\");\r\n    const newFilter: ListParams = {\r\n      ...filter,\r\n      _sort: _sort || undefined,\r\n      _order: (_order as \"asc\" | \"desc\") || undefined,\r\n    };\r\n    onChange(newFilter);\r\n  };\r\n  const handleClearFilter = () => {\r\n    if (!onChange) return;\r\n\r\n    const newFilter: ListParams = {\r\n      ...filter,\r\n      _page: 1,\r\n      _sort: undefined,\r\n      _order: undefined,\r\n      city: undefined,\r\n      name_like: undefined,\r\n    };\r\n    onChange(newFilter);\r\n    if (searchRef.current) {\r\n      searchRef.current.value = \"\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} md={6}>\r\n          <FormControl fullWidth variant=\"outlined\" size=\"small\">\r\n            <InputLabel htmlFor=\"searchByName\">Tìm Kiếm Tên</InputLabel>\r\n            <OutlinedInput\r\n              id=\"searchByName\"\r\n              label=\"Tìm Kiếm Tên\"\r\n              endAdornment={<Search />}\r\n              defaultValue={filter.name_like}\r\n              onChange={handleSearchChange}\r\n              inputRef={searchRef}\r\n            />\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={12} md={6} lg={3}>\r\n          <FormControl variant=\"outlined\" size=\"small\" fullWidth>\r\n            <InputLabel id=\"filterByCity\">Tìm Kiếm Thành Phố</InputLabel>\r\n            <Select\r\n              labelId=\"filterByCity\"\r\n              value={filter.city || \"\"}\r\n              label=\"Tìm Kiếm Thành Phố\"\r\n              onChange={handleCityChange}\r\n            >\r\n              <MenuItem value=\"\">\r\n                <em>Tất Cả</em>\r\n              </MenuItem>\r\n\r\n              {cityList.map((city) => (\r\n                <MenuItem key={city.code} value={city.code}>\r\n                  {city.name}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={6} lg={2}>\r\n          <FormControl variant=\"outlined\" size=\"small\" fullWidth>\r\n            <InputLabel id=\"sortBy\">Sắp Xếp</InputLabel>\r\n            <Select\r\n              labelId=\"sortBy\"\r\n              value= {(filter._sort ? `${filter._sort}.${filter._order}` : '') as any}\r\n              onChange={handleSortChange}\r\n              label=\"Sắp Xếp\"\r\n            >\r\n              <MenuItem value=\"\">\r\n                <em>...Chọn</em>\r\n              </MenuItem>\r\n\r\n              <MenuItem value=\"name.asc\">Sắp Xếp Tên Tăng Dần</MenuItem>\r\n              <MenuItem value=\"name.desc\">Sắp Xếp Tên Giảm Dần</MenuItem>\r\n              <MenuItem value=\"mark.asc\">Sắp Xếp Điểm Khuôn Mặt Tăng Dần</MenuItem>\r\n              <MenuItem value=\"mark.desc\">Sắp Xếp Điểm Khuôn Mặt Giảm Dần</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={6} lg={1}>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            fullWidth\r\n            onClick={handleClearFilter}\r\n          >\r\n            Clear\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}\r\n","import { RootState } from '../../app/store';\r\nimport { PayloadAction } from '@reduxjs/toolkit';\r\nimport { createSlice } from '@reduxjs/toolkit';\r\nimport { Lover } from '../../models';\r\nimport { ListParams, PaginationParams, ListResponse } from '../../models/common';\r\n\r\n\r\nexport interface LoverState {\r\n    loading : boolean;\r\n    list: Lover[];\r\n    filter: ListParams;\r\n    pagination: PaginationParams;\r\n}\r\n\r\nconst initialState: LoverState = {\r\n    loading: false,\r\n    list: [],\r\n    filter: {\r\n        _page: 1,\r\n        _limit: 15,\r\n    },\r\n    pagination: {\r\n        _page: 1,\r\n        _limit: 15,\r\n        _totalRows: 15,\r\n    },\r\n};\r\n\r\n\r\nconst loverSlice = createSlice ({\r\n    name: 'lover',\r\n    initialState,\r\n    reducers: {\r\n        fetchLoverList(state, action: PayloadAction<ListParams>) {\r\n            state.loading = true;\r\n        },\r\n        fetchLoverListSuccess(state, action: PayloadAction<ListResponse<Lover>>) {\r\n            state.list = action.payload.data;\r\n            state.pagination = action.payload.pagination;\r\n            state.loading = false;\r\n        },\r\n        fetchLoverListFailed(state) {\r\n            state.loading = false;\r\n        },\r\n        setFilter(state, action: PayloadAction<ListParams>) {\r\n            state.filter = action.payload;\r\n        },\r\n\r\n        setFilterWithDebounce(state, action: PayloadAction<ListParams>) {},\r\n    },\r\n});\r\n\r\nexport const loverActions = loverSlice.actions;\r\n\r\nexport const selectLoverList = (state: RootState) => state.lover.list;\r\nexport const selectLoverLoading = (state: RootState) => state.lover.loading;\r\nexport const selectLoverFilter = (state: RootState) => state.lover.filter;\r\nexport const selectLoverPagination = (state: RootState) => state.lover.pagination;\r\n\r\n\r\nconst loverReducer = loverSlice.reducer;\r\n\r\nexport default loverReducer;","import React, { useEffect } from 'react';\r\nimport { useAppDispatch, useAppSelector } from '../../../app/hooks';\r\nimport { Box, Typography, Button, createTheme, LinearProgress, Pagination } from '@mui/material';\r\nimport { makeStyles } from '@mui/styles';\r\nimport LoverTable from '../components/LoverTable';\r\nimport { selectCityMap,selectCityList } from '../../city/citySlice';\r\nimport { ListParams } from '../../../models';\r\nimport LoverFilters from '../components/LoverFilters';\r\nimport {\r\n    selectLoverLoading,\r\n    selectLoverFilter,\r\n    selectLoverList,\r\n    selectLoverPagination,\r\n    loverActions,\r\n} from '../loverSlice'\r\n\r\n\r\n\r\nconst theme = createTheme();\r\n\r\nconst useStyles = makeStyles(() => ({\r\n\r\n  root: {\r\n    position: 'relative',\r\n    paddingTop : theme.spacing(1),\r\n  },\r\n\r\n  titleContainer: {\r\n    display: 'flex',\r\n    flexFlow: 'row nowrap',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n\r\n    marginBottom: theme.spacing(4),\r\n  },\r\n\r\n  loading: {\r\n    position: 'absolute',\r\n    top: theme.spacing(-1),\r\n    width: '100%',\r\n  },\r\n\r\n}));\r\n\r\n\r\n\r\nexport default function ListPage() {\r\n\r\n  const loverList = useAppSelector(selectLoverList);\r\n  const pagination = useAppSelector(selectLoverPagination);\r\n  const loading = useAppSelector(selectLoverLoading);\r\n  const filter = useAppSelector(selectLoverFilter);\r\n  const cityMap = useAppSelector(selectCityMap);\r\n  const cityList = useAppSelector(selectCityList);\r\n  const classes = useStyles();\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n\r\n  useEffect(() => {\r\n    dispatch(loverActions.fetchLoverList(filter));\r\n  },[dispatch,filter]);\r\n\r\n  const handlePageChange = (e: any, page: number) => {\r\n    dispatch(\r\n      loverActions.setFilter({\r\n        ...filter,\r\n        _page: page,\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleSearchChange = (newFilter: ListParams) => {\r\n    dispatch(loverActions.setFilterWithDebounce(newFilter));\r\n  };\r\n\r\n  const handleFilterChange = (newFilter: ListParams) => {\r\n    dispatch(loverActions.setFilter(newFilter))\r\n  };\r\n\r\n  \r\n  return (\r\n    <Box className={classes.root}>\r\n      {loading && <LinearProgress className={classes.loading} />}\r\n\r\n      <Box className={classes.titleContainer}>\r\n        <Typography variant=\"h4\">Lovers</Typography>\r\n\r\n        <Button variant=\"contained\" color=\"primary\">\r\n          Thêm Mới\r\n        </Button>\r\n      </Box>\r\n\r\n      <Box mb={3}>\r\n        <LoverFilters\r\n          filter={filter}\r\n          cityList={cityList}\r\n          onChange={handleFilterChange}\r\n          onSearchChange={handleSearchChange}\r\n        />\r\n      </Box>\r\n      <LoverTable loverList={loverList} cityMap= {cityMap}/>\r\n\r\n      <Box my= {2} display = \"flex\" justifyContent=\"center\">\r\n        <Pagination\r\n          color = \"primary\"\r\n          count={Math.ceil(pagination?._totalRows / pagination?._limit)}\r\n          page= {pagination._page}\r\n          onChange= {handlePageChange}\r\n        />\r\n      </Box>\r\n    </Box>\r\n  );\r\n\r\n}","import React, { useEffect } from 'react';\r\nimport {Route , Switch, useRouteMatch} from 'react-router-dom'\r\nimport AddEditPage from './pages/AddEditPage'\r\nimport ListPage from './pages/ListPage';\r\nimport { useAppDispatch } from '../../app/hooks';\r\nimport { cityActions } from '../city/citySlice';\r\n\r\n\r\nexport default function Lover() {\r\n  \r\n  const match = useRouteMatch();\r\n  const dispatch = useAppDispatch();\r\n\r\n  useEffect(()=>{\r\n    dispatch(cityActions.fetchCityList());\r\n  },[dispatch]);\r\n\r\n  return  (\r\n    <Switch>\r\n      <Route path={match.path} exact>\r\n        <ListPage/>\r\n      </Route>\r\n\r\n      <Route path={`${match.path}/add`}>\r\n        <AddEditPage />\r\n      </Route>\r\n\r\n      <Route path={`${match.path}/:studentId`}>\r\n        <AddEditPage />\r\n      </Route>\r\n    </Switch>\r\n  );\r\n}\r\n","import { Box, createTheme } from '@mui/material';\r\nimport { makeStyles } from '@mui/styles';\r\nimport * as  React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport Dashboard from '../../features/dashboard';\r\nimport Lover from '../../features/lover';\r\nimport { Header, Sidebar } from '../Common';\r\n\r\n\r\nconst theme = createTheme();\r\nconst light = theme.palette.primary.light;\r\nconst spacingMain = theme.spacing(2,3);\r\nconst spacingSb = theme.spacing(0.2,0.2);\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'grid',\r\n        gridTemplateRows: 'auto 1fr',\r\n        gridTemplateColumns: '240px 1fr',\r\n        gridTemplateAreas: `\"header header\" \"sidebar main\"`,\r\n        minHeight: '100vh',\r\n    },\r\n    header: {\r\n        gridArea: 'header',\r\n        \r\n    },\r\n    sidebar: {\r\n        gridArea: 'sidebar',\r\n        borderRight: `1px solid ${light}`,\r\n        padding: spacingSb,\r\n    },\r\n    main: {\r\n        gridArea: 'main',\r\n        padding: spacingMain,\r\n    },\r\n}))\r\n\r\nexport function AdminLayout() {\r\n\r\n    const classes = useStyles()\r\n    return <Box className={classes.root}>\r\n        <Box className={classes.header}>\r\n            <Header />\r\n        </Box>\r\n        <Box className={classes.sidebar}>\r\n            <Sidebar/>\r\n        </Box>\r\n        <Box className={classes.main}>\r\n            <Switch>\r\n                <Route path= \"/admin/trang-chu\">\r\n                    <Dashboard/>\r\n                </Route>\r\n                <Route path= \"/admin/nguoi-yeu\">\r\n                    <Lover/>\r\n                </Route>\r\n            </Switch>\r\n        </Box>\r\n    </Box>;\r\n}","import { Box, Button,CircularProgress,createTheme,Paper, Typography } from '@mui/material';\r\nimport { makeStyles } from '@mui/styles';\r\nimport * as  React from 'react';\r\nimport { useAppDispatch, useAppSelector } from '../../../app/hooks';\r\nimport { authActions } from '../authSlice';\r\n\r\nconst theme = createTheme();\r\nconst space = theme.spacing(3);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n   root: {\r\n        display :'flex',\r\n        flexFlow: 'row nowrap',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        minHeight:\"100vh\",\r\n   },\r\n   box: {\r\n        padding: space,\r\n\r\n   },\r\n}));\r\n\r\nexport default function LoginPage () {\r\n    \r\n    const classes = useStyles();\r\n    const dispatch = useAppDispatch();\r\n    const isLogging = useAppSelector(state => state.auth.logging)\r\n    const handleLoginClick = () => {\r\n        dispatch(authActions.login({\r\n            username: '',\r\n            password:'',\r\n        }))\r\n    }\r\n    \r\n    return <div className= {classes.root}>\r\n        <Paper elevation={1} className= {classes.box}>\r\n            <Typography variant='h5' component='h1'>Quản Lý Người Yêu</Typography>\r\n\r\n            <Box mt={4}>\r\n                <Button fullWidth variant=\"contained\" color= \"primary\" onClick={handleLoginClick}>\r\n                    {isLogging && <CircularProgress size={20} color='secondary'></CircularProgress>} &nbsp; Đăng Nhập</Button>\r\n            </Box>\r\n        </Paper>\r\n    </div>;\r\n}","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { NotFound, PrivateRoutes } from './components/Common';\nimport { AdminLayout } from './components/Layout';\nimport LoginPage from './features/auth/pages/LoginPage';\n\n\n\nfunction App() {\n   return (\n    <>\n     <div>\n        <Switch>\n          <Route path= \"/login\">\n              <LoginPage/>\n          </Route>\n          <PrivateRoutes path= \"/admin\">\n              <AdminLayout/>\n          </PrivateRoutes>\n          <Route>\n              <NotFound/>\n          </Route>\n        </Switch>\n      </div>\n    </>\n     \n  );\n}\n\nexport default App;\n","import { PayloadAction } from '@reduxjs/toolkit';\r\nimport { push } from 'connected-react-router';\r\nimport { call, delay, fork, put, take} from \"redux-saga/effects\";\r\nimport { authActions, LoginPayLoad } from \"./authSlice\";\r\n\r\nfunction* handleLogin(payload: LoginPayLoad) {\r\n\r\n    try {\r\n        yield delay(1000)\r\n        localStorage.setItem('access_token','fake_login')\r\n        yield put(authActions.loginSuccess({\r\n                id: 1 ,\r\n                name: 'Phuc',  \r\n            })\r\n        );\r\n        yield put(push('/admin'));\r\n    } catch (error: any) {\r\n        yield put(authActions.loginFailed(error.message))\r\n    }\r\n\r\n}\r\n\r\nfunction* handleLogout() {\r\n    console.log(\"Logout\");\r\n    localStorage.removeItem('access_token');\r\n    yield put(push('/login'))\r\n}\r\n\r\nfunction* watchLoginFLow() {\r\n    while (true) {\r\n\r\n        const isLoggedIn = Boolean(localStorage.getItem('access_token'));\r\n        if (!isLoggedIn) {\r\n            const action: PayloadAction<LoginPayLoad> = yield take(authActions.login.type);\r\n            yield fork(handleLogin, action.payload);\r\n        }\r\n\r\n\r\n        yield take(authActions.logout.type);\r\n        yield call(handleLogout);\r\n    }\r\n}\r\n\r\nexport default function* authSaga() {\r\n    yield fork(watchLoginFLow);\r\n}","import axios, { AxiosRequestConfig, AxiosResponse } from \"axios\"\r\nconst axiosClient = axios.create({\r\n    baseURL: 'http://js-post-api.herokuapp.com/api',\r\n    headers: {\r\n        'Content-Type' : 'application/json',\r\n    },\r\n});\r\n\r\naxiosClient.interceptors.request.use(function (config: AxiosRequestConfig) {\r\n    return config;\r\n  }, function (error) {\r\n    return Promise.reject(error);\r\n  });\r\n\r\n\r\naxiosClient.interceptors.response.use(function (response: AxiosResponse) {\r\n\r\n    return response.data;\r\n  }, function (error) {\r\n\r\n    return Promise.reject(error);\r\n  });\r\n\r\nexport default axiosClient;","\r\nimport { City, ListResponse } from \"../models\";\r\nimport axiosClient from \"./axiosClient\"\r\n\r\nconst cityApi = {\r\n    getAll(): Promise<ListResponse<City>> {\r\n        const url = '/cities'\r\n        return axiosClient.get(url, {params : {\r\n            _page: 1,\r\n            _limit:10\r\n        }});\r\n    },\r\n};\r\n\r\nexport default cityApi","\r\nimport {ListParams, ListResponse, Lover } from \"../models\";\r\nimport axiosClient from \"./axiosClient\"\r\n\r\nconst LoverApi = {\r\n    getAll(params: ListParams): Promise<ListResponse<Lover>> {\r\n        const url = '/students';\r\n        return axiosClient.get(url, { params });\r\n    },\r\n    getById(id: string): Promise<Lover> {\r\n        const url = `/students/${id}`;\r\n        return axiosClient.get(url);\r\n    },\r\n    add(data: Lover): Promise<Lover> {\r\n        const url = '/students'\r\n        return axiosClient.post(url, data);\r\n    },\r\n    update(data: Partial<Lover>): Promise<Lover> {\r\n        const url = `/students/${data.id}`;\r\n        return axiosClient.patch(url, data);\r\n    },\r\n    remove(id: string): Promise<any> {\r\n        const url = `/students/${id}`;\r\n        return axiosClient.delete(url);\r\n    },\r\n};\r\n\r\nexport default LoverApi;","import cityApi from \"../../api/cityApi\";\r\nimport loverApi from \"../../api/loverApi\";\r\nimport {City, ListResponse ,Lover} from '../../models';\r\nimport {all, call, put, takeLatest } from 'redux-saga/effects';\r\nimport { dashboardActions, RankingByCity } from \"./dashboardSlice\";\r\n\r\nfunction* fetchStatistics() {\r\n    const responseList: Array<ListResponse<Lover>> = yield all([\r\n        call(loverApi.getAll, {_page: 1, _limit: 1, gender: 'male'}),\r\n        call(loverApi.getAll, {_page: 1, _limit: 1, gender: 'female'}),\r\n        call(loverApi.getAll, {_page: 1, _limit: 1, mark_gte: 8}),\r\n        call(loverApi.getAll, {_page: 1, _limit: 1, mark_lte: 5}),\r\n    ]);\r\n\r\n    const statisticList = responseList.map((x) =>  x.pagination._totalRows);\r\n    const [maleCount , femaleCount, highMarkCount, lowMarkCount] = statisticList;\r\n    yield put (\r\n        dashboardActions.setStatistics({maleCount, femaleCount, highMarkCount, lowMarkCount})\r\n    );\r\n\r\n}\r\n\r\nfunction* fetchHighestLoverList() {\r\n    const {data}: ListResponse<Lover> = yield call(loverApi.getAll, {\r\n        _page: 1,\r\n        _limit: 5, \r\n        _sort: 'mark',\r\n        _order:'desc',\r\n    });\r\n\r\n    yield put (dashboardActions.setHighestLoverList(data));\r\n}\r\n\r\nfunction* fetchLowestLoverList() {\r\n    const {data}: ListResponse<Lover> = yield call(loverApi.getAll, {\r\n        _page: 1,\r\n        _limit: 5, \r\n        _sort: 'mark',\r\n        _order:'asc',\r\n    });\r\n\r\n    yield put (dashboardActions.setLowestLoverList(data));\r\n}\r\n\r\nfunction* fetchRankingByCityList() {\r\n    const {data: cityList}: ListResponse<City> = yield call(cityApi.getAll);\r\n\r\n    const callList = cityList.map((x) => call(loverApi.getAll,{\r\n        _page: 1,\r\n        _limit: 5,\r\n        _sort:'mark',\r\n        _order:'desc',\r\n        city: x.code,\r\n        })\r\n    );\r\n\r\n    const responseList: Array<ListResponse<Lover>> = yield all(callList);\r\n    const rankingByCityList: Array<RankingByCity> = responseList.map((x,idx) => ({\r\n        cityId: cityList[idx].code,\r\n        cityName: cityList[idx].name,\r\n        rankingList: x.data,\r\n    }));\r\n\r\n    yield put (dashboardActions.setRankingByCityList(rankingByCityList));\r\n}\r\n\r\nfunction* fetchDashboardData() {\r\n    try {\r\n        yield all ([\r\n            call(fetchStatistics),\r\n            call(fetchHighestLoverList),\r\n            call(fetchLowestLoverList),\r\n            call(fetchRankingByCityList),\r\n        ]);\r\n\r\n        yield put(dashboardActions.fetchDataSuccess());\r\n    } catch (error) {\r\n        console.log('Lỗi đến từ data');\r\n        yield put(dashboardActions.fetchDataFailed());\r\n    }\r\n}\r\n\r\nexport default function* dashboardSaga() {\r\n    yield takeLatest(dashboardActions.fetchData.type, fetchDashboardData);\r\n}\r\n","import { ListParams, ListResponse } from './../../models/common';\r\nimport { PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { Lover } from '../../models';\r\nimport loverApi from '../../api/loverApi';\r\nimport { call, put, takeLatest, debounce} from 'redux-saga/effects';\r\nimport { loverActions } from './loverSlice';\r\n\r\nfunction* fetchLoverList(action: PayloadAction<ListParams>) {\r\n    try {\r\n        const response: ListResponse<Lover> = yield call (\r\n            loverApi.getAll, action.payload\r\n        );\r\n        yield put (loverActions.fetchLoverListSuccess(response));\r\n\r\n\r\n    } catch (error) {\r\n        console.log ('Lỗi đến từ lover data', error);\r\n        yield put(loverActions.fetchLoverListFailed);\r\n    }\r\n}\r\n\r\nfunction* handleSearchDebounce(action: PayloadAction<ListParams>) {\r\n    yield put (loverActions.setFilter(action.payload));\r\n}\r\n\r\nexport default function* loverSaga() {\r\n    yield takeLatest (loverActions.fetchLoverList, fetchLoverList);\r\n    yield debounce (500, loverActions.setFilterWithDebounce.type, handleSearchDebounce);\r\n}","import { cityActions } from './citySlice';\r\nimport { call, put, takeLatest } from 'redux-saga/effects';\r\nimport cityApi from '../../api/cityApi';\r\nimport { City } from '../../models/city';\r\nimport { ListResponse } from './../../models/common';\r\nfunction* fetchCityList() {\r\n    try {\r\n        const response: ListResponse<City> = yield call(cityApi.getAll);\r\n        yield put(cityActions.fetchCityListSuccess(response));\r\n    } catch (error) {\r\n        console.log('Lỗi đến từ city data', error);\r\n        yield put(cityActions.fetchCityListFailed());\r\n    }\r\n}\r\nexport default function* citySaga() {\r\n    yield takeLatest(cityActions.fetchCityList.type,fetchCityList)\r\n}\r\n","import { all } from 'redux-saga/effects';\r\nimport authSaga from '../features/auth/authSaga';\r\nimport dashboardSaga from '../features/dashboard/dashboardSaga';\r\nimport loverSaga from '../features/lover/loverSaga';\r\nimport citySaga from '../features/city/citySaga';\r\n\r\nexport default function* rootSaga() {\r\n     yield all([ authSaga(), dashboardSaga(), loverSaga(), citySaga()]);\r\n}","import { Action, combineReducers, configureStore, ThunkAction } from '@reduxjs/toolkit';\nimport { connectRouter, routerMiddleware } from 'connected-react-router';\nimport createSagaMiddleware from 'redux-saga';\nimport authReducer from '../features/auth/authSlice';\nimport dashboardReducer from '../features/dashboard/dashboardSlice';\nimport { history } from '../utils';\nimport rootSaga from './rootSaga';\nimport loverReducer from '../features/lover/loverSlice'\nimport cityReducer from '../features/city/citySlice';\n\nconst rootReducer = combineReducers({\n  router: connectRouter(history),\n  auth: authReducer,\n  dashboard: dashboardReducer,\n  lover : loverReducer,\n  city: cityReducer,\n})\n\nconst sagaMiddleware = createSagaMiddleware();\nexport const store = configureStore({\n  reducer: rootReducer,\n  middleware: (getDefaulMiddleware) => getDefaulMiddleware().concat(sagaMiddleware,routerMiddleware(history)),\n});\n\nsagaMiddleware.run(rootSaga);\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { CssBaseline } from '@mui/material';\nimport { ConnectedRouter } from 'connected-react-router';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport { store } from './app/store';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport { history } from './utils';\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ConnectedRouter history={history}>\n        <CssBaseline/>\n        <App />\n      </ConnectedRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}